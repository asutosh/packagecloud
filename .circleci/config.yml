version: 2.1

executors:
  build:
    docker:
      - image: atotto/debian-builder:latest
    working_directory: /workspace
    environment:
      GOPATH: /
      GOCACHE: /.cache/go-build
  deploy:
    docker:
      - image: atotto/debian-builder:latest
    working_directory: /workspace
    environment:
      GOPATH: /
      GOCACHE: /.cache/go-build

jobs:
  build:
    executor:
      name: build
    steps:
      - run: go env
      - checkout
      - restore_cache:
          keys:
            - go-module-cache-v1-{{ checksum "/workspace/go.sum" }}
            - go-module-cache-v1-
      - run: go mod download
      - save_cache:
          key: go-module-cache-v1-{{ checksum "/workspace/go.sum" }}
          paths:
            - /pkg/mod/cache
      - run: go vet ./...
      - run: staticcheck ./...
      - run: go test -v ./...
      - run: go build && go clean
      - persist_to_workspace:
          root: /workspace
          paths:
            - .

  deploy:
    executor:
      name: deploy
    steps:
      - attach_workspace:
          at: /workspace
      - restore_cache:
          keys:
            - go-module-cache-v1-{{ checksum "/workspace/go.sum" }}
            - go-module-cache-v1-
      - run:
          name: release version ${CIRCLE_TAG#v}
          command: echo "release version ${CIRCLE_TAG#v}"
      - run:
          name: build for arm64
          command: rm -rf pkg-build && export GOARCH=arm64 && go build && go-bin-deb generate --arch ${GOARCH} --version ${CIRCLE_TAG#v}
      - run:
          name: build for armhf v7
          command: rm -rf pkg-build && GOARCH=arm GOARM=7 go build && go-bin-deb generate --arch armhf --version ${CIRCLE_TAG#v}
      - run:
          name: build for amd64
          command: rm -rf pkg-build && export GOARCH=amd64 && go build && go-bin-deb generate --arch ${GOARCH} --version ${CIRCLE_TAG#v}
      - run: ./packagecloud push atotto/debian-utils/any/any packagecloud_*.deb

workflows:
  version: 2
  test:
    jobs:
      - build
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
